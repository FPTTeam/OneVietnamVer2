@using OneVietnam.DTL
@using OneVietnam.Models
@using Microsoft.AspNet.Identity
@using OneVietnam.Common
<script>
    var query = window.location.search.substring(1);

    $(document)
        .ready(function () {
         
            $("#stamp-button2").hide();
            $("#stamp-button").removeClass("hides");
            if (query === 'ShowPostDetailPage') {
//                $("#CreatePostForm").data('validator').resetForm();
//                $(".validation-summary-errors ul li").remove();
                $(".validation-summary-errors").addClass('validation-summary-valid').removeClass('validation-summary-errors');
                $(".stamp").toggleClass("hides");
                $(".edits").toggleClass("edits-cl");
                $(".plus").toggleClass("plus-cl");


            }
        });


    function cancelReport() {
        $(".validation-summary-errors ul li").remove();
        $(".input-validation-error").removeClass('input-validation-error');
        $(".validation-summary-errors").addClass('validation-summary-valid').removeClass('validation-summary-errors');
        var des = document.getElementById('ReportDescription');
        des.innerText = "";

    }

    function ShowThank(postId) {
        if ($("#ReportPost_" + postId).find('.input-validation-error').length > 0) {
            $("#ReportPost_" + postId).modal('show');
        } else {
            cancelReport();
            $("#ReportPost_" + postId).modal('hide');
            $("#ThankYouModal_" + postId).modal('show');
        }
    }

</script>
<script>
    var isAuthenticated = false;
</script>
@if (Request.IsAuthenticated)
{
    <script>
        var authenticatedUser;
        isAuthenticated = true;

        $.ajax({
            url: '/Map/GetUserInfo?userId=' + "@User.Identity.GetUserId()",
            type: 'GET',
            contentType: 'application/json;',
            dataType: 'json',
            success: function (json) {
                authenticatedUser = { x: json.Location.XCoordinate, y: json.Location.YCoordinate, address: json.Location.Address }
            }
        });
    </script>
}


<div class="ui grid">
    <div class="two wide column" style="padding-right: 0">
        <div class="ui inline dropdown filter-post"style="margin-left: 5px">
            <div class="text">
                <div class="ui blue empty circular label"></div>
                Tất cả
            </div>
            <i class="dropdown icon"></i>
            <div class="menu filter-items">
                <div class="item" data-filter="-1">
                    <div class="ui blue empty circular label"></div>
                    Tất cả
                </div>
                @{
                    List<Icon> postType = ViewData["PostTypes"] as List<Icon>;
                    if (postType != null && postType.Count > 0)
                    {
                        foreach (var type in postType)
                        {
                            if (type.IconValue == (int)PostTypeEnum.AdminPost && Model?.Roles != null && !Model.Roles.Contains(CustomRoles.Admin) && !Model.Roles.Contains(CustomRoles.Mod))
                            {
                                continue;
                            }
                            <div class="item" data-filter="@type.IconValue">
                                @if (type.IconValue == (int)PostTypeEnum.Accommodation)
                                {                                    
                                    <div class="ui black empty circular label"></div>
                                }
                                else if (type.IconValue == (int)PostTypeEnum.Job)
                                {
                                    <div class="ui yellow empty circular label"></div>
                                }
                                else if (type.IconValue == (int)PostTypeEnum.Furniture)
                                {
                                    <div class="ui olive empty circular label"></div>
                                }
                                else if (type.IconValue == (int)PostTypeEnum.HandGoods)
                                {
                                    <div class="ui purple empty circular label"></div>
                                }
                                else if (type.IconValue == (int)PostTypeEnum.Trade)
                                {
                                    <div class="ui orange empty circular label"></div>
                                }
                                else if (type.IconValue == (int)PostTypeEnum.Sos)
                                {
                                    <div class="ui teal empty circular label"></div>
                                }
                                else if (type.IconValue == (int)PostTypeEnum.Warning)
                                {
                                    <div class="ui red empty circular label"></div>                                    
                                }
                                else if (type.IconValue == (int)PostTypeEnum.AdminPost)
                                {
                                    <div class="ui black empty circular label"></div>
                                }
                                else
                                {
                                    <div class="ui black empty circular label"></div>
                                }
                                @{
                                    if (type.IconValue == (int)PostTypeEnum.AdminPost)
                                    {
                                        <label style="font-size: 13px">@type.IconText</label>
                                    }
                                    else {
                                        @type.IconText
                                    }
                                }
                                
                            </div>
                        }
                    }
                }

            </div>
        </div>      
    </div>
   
    <div class="ten wide column"  >
        
        @Html.Partial("_CreatePost")

        <div class="grids" >
            <div class="grid-sizer"></div>
            <div class="gutter-sizer"></div>
            <div class="ui cards" id="postScroll">
                @Html.Partial("_PostRow", (ViewBag.Posts as List<PostViewModel>))
                <div class="container infinite-scroll" id="gohere"></div>

            </div>                      

        </div>
    </div>



    <div class="four wide column" >
        <div class="ui segment"  style="margin-right: 15px!important">
            <h3>
                <div class="ui header" style="text-align: center">
                    Từ người Quản trị
                </div>
            </h3>
            <div id="forAdminPost"></div>
        </div>
        <a href="javascript:" id="return-to-top"><i class="chevron up icon"></i></a>


    </div>
</div>

@section scripts{
    <script type="text/javascript">
        $(".grids").imagesLoaded().progress(function () {
            $(".grids").isotope('layout');
        });
       
        $.ajax({
            type: 'GET',
            url: '@Url.Action("_AdminPost","Newsfeed")',
            success: function (partialResult) {
                $("#forAdminPost").html(partialResult);
            }
        });
        var forLoad = $(".ui.link.cards");
        var grid = $(".grids");
        var filterValue = -1;
        $(function () {
            $("div#loading").hide();
        });
       
        var moreRowsUrl = '@Url.Action("Index","Newsfeed")';
        $(window).scroll(scrollHandler);
    </script>
}


@using OneVietnam.DTL;
@using Microsoft.AspNet.Identity

@model OneVietnam.Models.PostViewModel
@{   
    List<Tag> tagList = ViewData["TagList"] as List<Tag>;
    List<Icon> postTypes = ViewData["PostTypes"] as List<Icon>;
    List<Uri> blobs = ViewData["Blobs"] as List<Uri>;
}
<script src="~/Scripts/PostLocation.js" type="text/javascript"></script>

<div class="ui grid">
    <div class="three wide column"></div>

    <div class="ten wide column">
        @using (Html.BeginForm("EditPost", "Newsfeed", FormMethod.Post, new { enctype = "multipart/form-data", @class = "ui form", @id = "EditPostForm" }))
        {

            if (Model != null && (Model.DeletedFlag == false) && (Model.LockedFlag == false))
            {
                <div class="ui segment">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(false)
                    <!-- Title -->
                    <div class="field">
                        <h2 class="ui medium header" style="margin-bottom: 0">* Tiêu đề</h2>
                        <div class="ui input  focus">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { placeholder = "Nhâp tiêu đề..." } })
                        </div>
                    </div>

                    <!-- Post Type and Tags -->
                    <div class="two fields">
                        <!-- Post Type -->
                        <div class="field">
                            <label>* Loại bài đăng</label>
                            <div class="ui  selection dropdown" id="drPostTypeEditPost">
                                @{
                                    if (postTypes != null && postTypes.Count > 0)
                                    {
                                        <input type="hidden" id="PostType" name="PostType" value="@Model.PostType">
                                        <i class="dropdown icon"></i>
                                        <div class="text">@postTypes[0].IconText</div>
                                        <div class="menu">
                                            @{
                                                int typeCount;
                                                if (User.IsInRole(CustomRoles.Admin) || User.IsInRole(CustomRoles.Mod))
                                                {
                                                    typeCount = postTypes.Count;
                                                }
                                                else
                                                {
                                                    typeCount = postTypes.Count - 1;
                                                }
                                                for (int i = 0; i < typeCount; i++)
                                                {
                                                    <div class="item" data-value="@postTypes[i].IconValue">
                                                        @postTypes[i].IconText
                                                    </div>
                                                }
                                            }
                                        </div>
                                    }
                                }

                            </div>
                        </div>
                        <!-- Tags -->
                        <div class="field">
                            <label>Thẻ liên quan</label>
                            <div class="ui fluid multiple search selection dropdown">
                                @{
                                    string tagValue = "";
                                    if (Model.Tags != null)
                                    {
                                        foreach (var tag in Model.Tags)
                                        {
                                            tagValue = string.IsNullOrEmpty(tagValue) ? tag.TagValue : string.Concat(tagValue + ",", tag.TagValue);
                                        }
                                    }

                                }
                                <input name="TagsInput" id="TagsInput" type="hidden" value="@tagValue">
                                <input class="search" autocomplete="off" tabindex="0"><span class="sizer"></span><div class="default text">Chọn hoặc thêm thẻ mới</div>
                                <div class="menu transition hidden" tabindex="-1">

                                    @{
                                        if (tagList != null)
                                        {
                                            foreach (Tag tag in tagList)
                                            {
                                                <div class="item" data-value="@tag.TagValue">@tag.TagText</div>
                                            }
                                        }
                                    }

                                </div>
                            </div>

                        </div>

                    </div>

                    <!-- Post Status -->
                    <div class="field">
                        <label>* Tình trạng bài đăng</label>
                        <div class="ui toggle checkbox">
                            <input data-val="true" checked="@Model.Status" id="Status" name="Status" type="checkbox" value="true" onchange="ChangeStatus()" />
                            <input name="Status" type="hidden" value="@Model.Status" />
                            @if (Model.Status)
                            {
                                <label id="LblStatus">Đang hoạt động</label>
                            }
                            else
                            {
                                <label id="LblStatus">Đã đóng</label>
                            }
                        </div>
                        <script>
                        function ChangeStatus() {
                            var chkStt = document.getElementById("Status");
                            var lblStt = document.getElementById("LblStatus");
                            if (chkStt.checked) {
                                lblStt.innerText = "Đang hoạt động";
                            } else {
                                lblStt.innerText = "Đã đóng";
                            }
                        };
                        </script>
                    </div>

                    <!-- Description -->
                    <div class="field">
                        <label>* Mô tả </label>
                        @Html.TextAreaFor(model => model.Description, new { placeholder = "Thêm mô tả cho bài đăng", style = "text-align: justify; width: 100%; max-width: 100%;",rows=4 })                        
                    </div>

                    <!-- Post Location -->
                    <div class="field">
                        <label>* Địa chỉ liên hệ</label>
                        <div class="ui floating labeled icon dropdown button" tabindex="15" id="locationDr" style="float: left;  margin: 0em 0em 1em">
                            <i class="blue world icon"></i>
                            <span class="forLocation">@Model.PostLocation.Address</span>
                            <div class="menu">
                                <div class="item"  id="getloc" onclick="setRegisteredLocation(@Model.PostLocation.XCoordinate, @Model.PostLocation.YCoordinate, '@Model.PostLocation.Address');">
                                    <div class="ui red empty circular label"></div>
                                    Địa chỉ bài đăng của bạn
                                </div>
                                <div class="item" onclick="getCurrentLocation();">
                                    <div class="ui blue empty circular label"></div>
                                    Địa điểm hiện tại của bạn
                                </div>

                                <div class="divider"></div>

                                <div class="item" style="font-weight: normal">
                                    Tìm kiếm địa điểm khác
                                </div>
                                <div class="ui left icon input">
                                    <i class="search icon"></i>
                                    <input type="text" id="search-location" name="search" placeholder="Tìm kiếm địa điểm..." style="margin-right: 19px">
                                </div>
                            </div>
                        </div>
                        @*<input class="hides"  id="PostLocation_Address" type="text" name="PostLocation_Address" />*@
                        @Html.EditorFor(model => model.PostLocation.Address, new { htmlAttributes = new { style = "display: none" } })
                        @Html.EditorFor(model => model.PostLocation.XCoordinate, new { htmlAttributes = new { style = "display: none" } })
                        @Html.EditorFor(model => model.PostLocation.YCoordinate, new { htmlAttributes = new { style = "display: none" } })

                    </div>
                <!-- Illustration -->
                <div class="field" style="font-weight: bold; font-size: 0.92857143em;">
                    <i class="large inverted blue camera icon" tabindex="17"></i>Thêm ảnh
                </div>
                <div class="field" id="forImg">
                    
                    <input type="file" id="files" name="files" onchange="previewImg()" class="upload hides" multiple />
                    <output id="result">
                        @{
                            if (blobs != null)
                            {
                                foreach (Uri link in blobs)
                                {

                                    <div class="imageBlock">
                                        <img class="thumb" src="@link" alt="images" />
                                        <div class="deleteDiv">
                                            <img class="deleteIcon" src="~/Images/deleteImage.png" title="Delete Image" onclick="deleteImage('@link', '@Model.Id');" />
                                        </div>
                                    </div>
                                }
                            }
                        }
                    </output>

                </div>
                    
                    

                    <script>
                            $(".camera.icon")
                     .click(function () {
                         $("#files").trigger('click');
                     });

                var ImgList = [];
                function previewImg() {
                    var filesInput = document.getElementById("files");
                    var files = filesInput.files;
                    var output = document.getElementById("result");
                    var i = 0,
                      len = files.length;
                    (function readFile(n) {
                        var reader = new FileReader();
                        var f = files[n];
                        reader.onload = function (e) {
                            var div = document.createElement("span");
                            div.className = "imageBlock";
                            div.innerHTML = "<img class='thumb' src='" + e.target.result + "'" +
                                "title='" + f.name + "'/> <div href='#' class='deleteDiv'><img class='deleteIcon' src='/Images/deleteImage.png' title='Delete Image'/></div>";

                            output.insertBefore(div, null);
                            div.children[1].addEventListener("click", function () {
                                div.parentNode.removeChild(div);
                                var removeId = div.children[0].title;
                                for (var index = 0; index < ImgList.length; index++) {
                                    if (ImgList[index].name === removeId) {
                                        ImgList.splice(index, 1);
                                        break;
                                    }
                                }
                            });
                            ImgList.push(f);
                            if (n < len - 1) readFile(++n);
                        };
                        reader.readAsDataURL(f);
                    }(i));
                }

                        function submitCreatePost() {
                            var formdata = new FormData();
                            for (var i = 0; i < ImgList.length; i++) {
                                formdata.append(ImgList[i].name, ImgList[i]);
                            }
                            var xhr = new XMLHttpRequest();
                            xhr.open('POST', '@Url.Action("GetIllustrations","Newsfeed")');
                            xhr.send(formdata);
                            xhr.onreadystatechange = function () {
                                if (xhr.readyState === 4 && xhr.status === 200) {
                                    ImgList.splice(0, ImgList.length);
                                }
                            }
                        }

                    </script>
                    <script>
                    function deleteImage(item, postid) {
                        var url = "/Newsfeed/DeleteImages";
                $.get(url, { Name: item, id: postid }, function (data) {
                    window.location.href = window.location.href;
                });
                }
                    </script>

                    <!-- Button Create and Cancel -->
                    <div class="field" style="text-align: center">
                        @Html.ActionLink("Hủy", "ShowPostDetailPage", "Newsfeed", new { Id = Model.Id }, new { @class = "ui cancel button" })
                        <input id="btnSaveEditPost" type="submit" onclick="submitCreatePost()" value="Lưu" class="ui teal button" />
                    </div>

                    <!-- User ID, Post ID, Create Date -->
                    <div class="field" style="display: none">
                        @Html.EditorFor(model => model.Id)
                        @Html.EditorFor(model => model.UserId)
                        @Html.EditorFor(model => model.CreatedDate)
                        @Html.EditorFor(model => model.LockedFlag)
                    </div>
                </div>

                            }
                            else
                            {
                                @Html.Partial("../Shared/_NoSearchResult");
                                }

                            }
    </div>

    <div class="three wide column">

    </div>
</div>


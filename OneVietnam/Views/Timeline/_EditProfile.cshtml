
@using Microsoft.AspNet.Identity
@using OneVietnam.Common
@model OneVietnam.Models.UserProfileViewModel


<script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<script src="/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>
<style>
    .disabled {
        opacity: 1 !important;
    }
</style>

@using (Ajax.BeginForm("EditProfile", "Timeline", new AjaxOptions
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "EditProfileForm",
    OnSuccess = "submitEditProfile"
}))
{
    <div class="ui segment">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(false)

        @if (Model.Id.Equals(User.Identity.GetUserId()))
        {
            <div class="ui right floated teal icon buttons" data-content="Sửa thông tin">
                <div class="ui vertical animated button" id="btnEditProfile" onclick="editableForm()">
                    <div class="hidden content">Sửa</div>
                    <div class="visible content">
                        <i class="edit icon"></i>
                    </div>
                </div>
            </div>
        }
        <p> </p>
        <div class="ui selection list">
            <div class="ui item">
                <div class="ui big fluid transparent tog disabled input">
                    <i class="large user icon"></i>
                    @Html.EditorFor(model => model.UserName)
                </div>
            </div>
            <div class="ui item">
                <div class="ui item">

                    <div class="ui big fluid transparent tog disabled input" id="lblGender">
                        @if (Model.Gender == (int)Gender.female)
                        {
                            <i class="large woman icon"></i>
                            <input class="text-box single-line valid" type="text" value="Nữ">
                        }
                        else if (Model.Gender == (int)Gender.male)
                        {
                            <i class="large man icon"></i>
                            <input class="text-box single-line valid" type="text" value="Nam">
                        }
                        else
                        {
                            <i class="large genderless icon"></i>
                            <input class="text-box single-line valid" type="text" value="Khác">
                        }

                    </div>

                    <div class="ui selection dropdown" id="drdGender" style="display: none">
                        <input type="hidden" name="Gender" id="Gender" value="@Model.Gender">
                        <i class="dropdown icon"></i>
                        <div class="default text">Giới tính</div>
                        <div class="menu">
                            <div class="item" data-value="0">
                                <i class="woman icon"></i> Nữ
                            </div>
                            <div class="item" data-value="1">
                                <i class="man icon"></i> Nam
                            </div>
                            <div class="item" data-value="2">
                                <i class="genderless icon"></i>Khác
                            </div>
                        </div>
                    </div>

                </div>

            </div>

            <div class="ui item">
                <div class="ui big fluid transparent tog disabled input">
                    <i class="large birthday icon"></i>
                    @{
                        var strDate = "1993-01-01";
                        if (Model.DateOfBirth != null)
                        {
                            strDate = $"{Model.DateOfBirth:yyyy-MM-dd}";
                        }
                    }
                    <input class="text-box single-line" id="DateOfBirth" name="DateOfBirth" type="date" value="@strDate">

                </div>
            </div>

            <div class="ui item">
                <div class="ui fields" style="padding: 0; width: 100%">
                    <div class="field" style="padding: 0; float: right">
                        <input style="float: right" class="hides ui teal button" value="Cập nhập" id="btnUpdateLocation" type="button" onclick="updateCurrentLocation(@Model.Location.XCoordinate,@Model.Location.YCoordinate,@Model.Location.Address)" />
                    </div>
                    <div class="field" style="padding: 0">
                <div class="ui big fluid transparent tog disabled input">
                    <i class="large world icon"></i>
                            <input class="text-box single-line valid" disabled="disabled" style="opacity: 1" id="Location_Address" name="Location.Address" type="text" value="@Model.Location.Address">
                            <input data-val="true" data-val-number="The field XCoordinate must be a number." data-val-required="The XCoordinate field is required." id="Location_XCoordinate" name="Location.XCoordinate" type="hidden" value="@Model.Location.XCoordinate">
                            <input data-val="true" data-val-number="The field YCoordinate must be a number." data-val-required="The YCoordinate field is required." id="Location_YCoordinate" name="Location.YCoordinate" type="hidden" value="@Model.Location.YCoordinate">
                        </div>
                    </div>                    
                </div>
            </div>
            <div class="ui item">

                <div class="ui big fluid transparent tog disabled input">
                    <i class="large mail outline icon"></i>
                    @Html.EditorFor(model => model.Email)

                </div>
            </div>
            <div class="ui item">

                <div class="ui big fluid tog transparent disabled input">
                    <i class="large mobile icon"></i>
                    @Html.EditorFor(model => model.PhoneNumber)

                </div>
            </div>

            <div class="ui item" style="display: none">
                @Html.EditorFor(model => model.Id)
            </div>

            <div class="ui item" style="text-align: center">
                <input class="hides ui cancel button" type="button" value="Hủy" id="btnCancel" onclick="cancelEditProfile()" />
                <input class="hides ui teal button" type="submit" value="Lưu" id="btnSave" />
            </div>
            <div class="ui item" id="divShowMap" style="max-width: 400px; height: 500px;">               
            </div>
        </div>
    </div>
}

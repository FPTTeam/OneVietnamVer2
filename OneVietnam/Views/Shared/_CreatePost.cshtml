@using OneVietnam.DTL
@model OneVietnam.Models.CreatePostViewModel

@{


    List<Tag> tagList = ViewData["TagList"] as List<Tag>;
    List<Icon> postTypes = ViewData["PostTypes"] as List<Icon>;

}
<link href="~/Content/fine-uploader-gallery.min.css" rel="stylesheet">
<script src="~/Scripts/fine-uploader.js"></script>
<script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>

<script type="text/template" id="qq-template-gallery">
    <div class="qq-uploader-selector qq-uploader qq-gallery" qq-drop-area-text="Kéo thả ảnh vào đây">
        <div class="qq-total-progress-bar-container-selector qq-total-progress-bar-container">
            <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-total-progress-bar-selector qq-progress-bar qq-total-progress-bar"></div>
        </div>
        <div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>
            <span class="qq-upload-drop-area-text-selector"></span>
        </div>
        <div class="qq-upload-button-selector qq-upload-button">
            <div>Tải ảnh lên</div>
        </div>
        <span class="qq-drop-processing-selector qq-drop-processing">
            <span>Processing dropped files...</span>
            <span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>
        </span>
        <ul class="qq-upload-list-selector qq-upload-list" role="region" aria-live="polite" aria-relevant="additions removals">
            <li>
                <div class="qq-progress-bar-container-selector qq-progress-bar-container">
                    <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-progress-bar-selector qq-progress-bar"></div>
                </div>
                <span class="qq-upload-spinner-selector qq-upload-spinner"></span>
                <div class="qq-thumbnail-wrapper">
                    <img class="qq-thumbnail-selector" qq-max-size="120" qq-server-scale>
                </div>
                <button type="button" class="qq-upload-cancel-selector qq-upload-cancel">X</button>


                <div class="qq-file-info">
                    <div class="qq-file-name">
                        <span class="qq-upload-file-selector qq-upload-file"></span>
                        <span class="qq-edit-filename-icon-selector qq-edit-filename-icon" aria-label="Edit filename"></span>
                    </div>
                    <input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">
                    <span class="qq-upload-size-selector qq-upload-size"></span>
                    <button type="button" class="qq-btn qq-upload-delete-selector qq-upload-delete">
                        <span class="qq-btn qq-delete-icon" aria-label="Delete"></span>
                    </button>
                    <button type="button" class="qq-btn qq-upload-pause-selector qq-upload-pause">
                        <span class="qq-btn qq-pause-icon" aria-label="Pause"></span>
                    </button>
                    <button type="button" class="qq-btn qq-upload-continue-selector qq-upload-continue">
                        <span class="qq-btn qq-continue-icon" aria-label="Continue"></span>
                    </button>
                </div>
            </li>
        </ul>

@*        <dialog class="qq-alert-dialog-selector">*@
@*            <div class="qq-dialog-message-selector"></div>*@
@*            <div class="qq-dialog-buttons">*@
@*                <button type="button" class="qq-cancel-button-selector">Close</button>*@
@*            </div>*@
@*        </dialog>*@
@**@
@*        <dialog class="qq-confirm-dialog-selector">*@
@*            <div class="qq-dialog-message-selector"></div>*@
@*            <div class="qq-dialog-buttons">*@
@*                <button type="button" class="qq-cancel-button-selector">No</button>*@
@*                <button type="button" class="qq-ok-button-selector">Yes</button>*@
@*            </div>*@
@*        </dialog>*@
@**@
@*        <dialog class="qq-prompt-dialog-selector">*@
@*            <div class="qq-dialog-message-selector"></div>*@
@*            <input type="text">*@
@*            <div class="qq-dialog-buttons">*@
@*                <button type="button" class="qq-cancel-button-selector">Cancel</button>*@
@*                <button type="button" class="qq-ok-button-selector">Ok</button>*@
@*            </div>*@
@*        </dialog>*@
    </div>
</script>
<div class="ui grid">
    <div class="two wide column"></div>
    <div class="ten wide column">
        <div class="stamp  hides">
            @using (Html.BeginForm("CreatePost", "Post", FormMethod.Post, new { enctype = "multipart/form-data", @class = "ui form", @id = "CreatePostForm" }))
            {                
                <div class="ui segment">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(false)
                    <!-- Title -->
                    <div class="field">
                        <h2 class="ui medium header" style="margin-bottom: 0">* Tiêu đề</h2>
                        <div class="ui input  focus">
                            @Html.EditorFor(model => model.Title, new {htmlAttributes = new {placeholder = "Nhâp tiêu đề..."}})
                        </div>
                    </div>

                    <!-- Post Type and Tags -->
                    <div class="two fields">
                        <!-- Post Type -->
                         <div class="field">
                            <label>* Loại bài đăng</label>
                            <div class="ui  selection dropdown" id="drPostType">
                                @{
                                    if (postTypes != null)
                                    {
                                        <input type="hidden" id="PostType" name="PostType" value="@postTypes[0].IconId">
                                        <i class="dropdown icon"></i>
                                        <div class="text">@postTypes[0].IconText</div>
                                        <div class="menu">
                                            @foreach (Icon icon in postTypes)
                                            {
                                                <div class="item" data-value="@icon.IconId">
                                                    @icon.IconText
                                                </div>
                                            }
                                        </div>
                                    }
                                }

                            </div>
                        </div>
                        <!-- Tags -->
                        <div class="field">
                            <label>Thẻ liên quan</label>
                            <div class="ui fluid multiple search selection dropdown">
                                <input name="TagsInput" id="TagsInput" type="hidden" value="">
                                <input class="search" autocomplete="off" tabindex="0"><span class="sizer"></span><div class="default text">Chọn hoặc thêm thẻ mới</div>
                                <div class="menu transition hidden" tabindex="-1">

                                    @{
                                        if (tagList != null)
                                        {
                                            foreach (Tag tag in tagList)
                                            {
                                                <div class="item" data-value="@tag.TagValue">@tag.TagText</div>
                                            }
                                        }
                                    }

                                </div>
                            </div>

                        </div>

                    </div>

                    <!-- Description -->
                    <div class="field">
                        <label>* Mô tả </label>
                        @Html.TextAreaFor(model => model.Description, new {placeholder = "Thêm mô tả cho bài đăng", rows = "4"})
                    </div>

                    <!-- Post Location -->
                    <div class="field">
                        <label>* Địa chỉ liên hệ</label>
                        <div class="ui floating labeled icon dropdown button" id="locationDr" style="float: left">
                            <i class="blue world icon"></i>
                            <span class="text">Filter</span>
                            <div class="menu">
                                <div class="item" onclick="getCurrentLocation();">
                                    <div class="ui red empty circular label"></div>
                                    Địa điểm hiện tại
                                </div>
                                <div class="item" onclick="getRegisteredLocation();">
                                    <div class="ui blue empty circular label"></div>
                                    Địa điểm của bạn
                                </div>


                                <div class="divider"></div>

                                <div class="header">
                                    tìm kiếm địa điểm
                                </div>
                                <div class="ui left icon input">
                                    <i class="search icon"></i>
                                    <input type="text" id="search-location" name="search" placeholder="Search...">
                                </div>
                            </div>
                        </div>
                        
                        @Html.EditorFor(model => model.PostLocation.Address, new { htmlAttributes = new { placeholder = "Địa chỉ của bạn" } })
                        @Html.EditorFor(model => model.PostLocation.XCoordinate, new { htmlAttributes = new { style = "display: none" } })
                        @Html.EditorFor(model => model.PostLocation.YCoordinate, new { htmlAttributes = new { style = "display: none" } })                        
                                                
                    </div>

                    <!-- Illustration -->
                    <div class="field">
                        <label>Ảnh minh họa</label>
                        <input type="file" id="file" name="selectFiles" class="upload"  multiple />

                        <script>
                            var uploader = new qq.FineUploader({
                                element: document.getElementById('fine-uploader-gallery'),
                                template: 'qq-template-gallery',
                                callbacks: {
                                    onError: function() {
                                        $(".grids").isotope("layout");
                                    }
                                }
                            });
                        </script>
                    </div>

                    <!-- Button Create and Cancel -->
                    <div class="field" style="text-align: center">
                        <input id="btnCancel" type="button" value="Hủy" class="ui cancel button" onclick="resetForm()" />
                        <input id="btnCreate" type="submit" tabindex="6" value="Đăng bài" name="createpost" class="ui teal button"/>
                        <script>
                            function resetForm() {
                                $("#CreatePostForm").data('validator').resetForm();                                
                                $(".validation-summary-errors ul li").remove();
                                $(".validation-summary-errors").addClass('validation-summary-valid').removeClass('validation-summary-errors');
                                $('.stamp-button').click();
                            }
                        </script>
                    </div>
                </div>

            }

        </div>
    </div>
</div>